--CHOON UNIVERSITY 실습문제 풀기
SELECT * FROM TAB;
DESC  TB_DEPARTMENT;

--1.학과 이름과 계열을 표시하시오
SELECT DEPARTMENT_NAME"학과명", CATEGORY"계열"
FROM  TB_DEPARTMENT;

--2. 학과의 학과 정원 출력
SELECT DEPARTMENT_NAME||'의 정원은'||CAPACITY||'명 입니다'"학과별 정원"
FROM TB_DEPARTMENT;

--3. 국어국문학과 휴학 여학생 국어국문학과의 학과코드는 001
SELECT * FROM tb_department;

SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE ABSENCE_YN ='Y' AND DEPARTMENT_NO = '001'AND
            STUDENT_SSN LIKE '%-2%';
            
--4. 도서 장기연체자 학번으로 찾기
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN('A513079','A513090','A513091','A513110','A513119')
ORDER BY 1 DESC;

--5.입학정원이 20명 이상 30명 이하인 학과들의 학과 이름과 계열을 출력하시오.

SELECT DEPARTMENT_NAME,
    CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;

--6.학과가 없는 총장을 알아내기
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

--7. 학과가 지정되어 있지 않은 학생 찾기

SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

--8. 선수과목 이 존재하는 과목번호 조회

SELECT CLASS_NO FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

--9 춘 대학의 계열 조회
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT
ORDER BY 1 ASC;

SELECT * FROM TB_STUDENT;

--10. 02학번 전주 거주자 모임. 휴학제외 학번 이름 주민번호 출력
SELECT STUDENT_NO,
    STUDENT_NAME,
    STUDENT_SSN
FROM TB_STUDENT
WHERE STUDENT_ADDRESS LIKE '%전주시%' AND ABSENCE_YN = 'N' 
    AND ENTRANCE_DATE BETWEEN '020101' AND '021231';
    
--함수
--1. 영어영문학과 학번 이름 입학년도 입학년도 순 정렬
SELECT STUDENT_NO"학번",
    STUDENT_NAME"이름",
    TO_CHAR(ENTRANCE_DATE, 'YYYY-MM-DD')"입학년도"
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '002'
ORDER BY 3 ASC;

--2. 이름이 세글자가 아닌 교수.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) != 3;

--3.남자 교수들의 이름과 나이.
SELECT PROFESSOR_NAME"교수이름",  -- 14년 전 자료?
   FLOOR((SYSDATE - TO_DATE('19'||SUBSTR(PROFESSOR_SSN,1,6),'YYYYMMDD'))/365) "나이"
FROM TB_PROFESSOR
WHERE PROFESSOR_SSN LIKE '%-1%'  -- 김소영?
ORDER BY 2 ASC;

--4. 교수들의 성을 제외한 이름 출력
SELECT SUBSTR(PROFESSOR_NAME,2,LENGTH(PROFESSOR_NAME)) "이름"
FROM TB_PROFESSOR;

--5.재수생 입학자 19살입학은 제외 ★★
SELECT STUDENT_NO,
    STUDENT_NAME
FROM TB_STUDENT

WHERE  (((ENTRANCE_DATE - TO_DATE(SUBSTR( STUDENT_SSN,1,6))) / 365)+1) > 20;

--6. 2020년 크리스마스는 무슨 요일인가?
SELECT TO_CHAR(TO_DATE('20221225'),'DY') FROM DUAL;

--7. TO_DATE 함수
SELECT TO_DATE('99/10/11','YY/MM/DD'),
       TO_DATE('49/10/11','YY/MM/DD'),
       TO_DATE('99/10/11','RR/MM/DD'),
       TO_DATE('49/10/11','RR/MM/DD')
FROM DUAL;
--YY는 동시대 , RR은 00~49 / 50~99 로 나누어 현재년도와 입력년도가 같으면 현세기 다르면 이전 또는 다음세기

--8. 2000년대 이전 학생의 학번과 이름
SELECT STUDENT_NO "학번",
        STUDENT_NAME"이름"
FROM TB_STUDENT
WHERE STUDENT_NO NOT LIKE 'A%';

--9. 학번이 A517178인 한아름 학생의 학점 총 평점을 구하는 SQL 
SELECT ROUND(AVG(POINT),1) "평점"
FROM TB_GRADE 
WHERE STUDENT_NO = 'A517178';

--10. 학과별 학생수 "학과번호" , "학생수(명)" 의 형태로 헤더를 만들어 결과 출력
SELECT DEPARTMENT_NO "학과번호",
        COUNT(*)
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1 ASC;

--11. 지도교수 미배정 학생
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

--12.김고운 년도 별 평점
SELECT SUBSTR(TERM_NO,1,4)"년도",
       ROUND( AVG(POINT), 1 ) "년도 별 평점"
FROM TB_GRADE
WHERE STUDENT_NO ='A112113'
GROUP BY SUBSTR(TERM_NO,1,4);

--13. 학과 별 휴학생 수 파악
SELECT DEPARTMENT_NO "학과코드명",
       SUM(DECODE(ABSENCE_YN,'Y',1,'N',0)) "휴학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1 ASC;

--14. 동명이인 찾기
SELECT STUDENT_NAME "동일이름",
       COUNT(*)"동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME HAVING  COUNT(*) >= 2;

--15.김고운 학기별 평점 년도별 누적평점 총 평점
SELECT  NVL(SUBSTR(TERM_NO,1,4),' ')"년도",
        NVL(SUBSTR(TERM_NO,5,2),' ') "학기",
        ROUND(AVG(POINT),1) "평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO,1,4) , SUBSTR(TERM_NO,5,2));

--ADDITIONAL SELECT - OPTION
--1. 학생이름과 주소지 오름차순
SELECT STUDENT_NAME "학생 이름",
        STUDENT_ADDRESS "주소지"
FROM TB_STUDENT
ORDER BY 1 ASC;

--2.휴학중인 학생들의 이름과 주민번호 나이 적은순서
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY 2 DESC;

--3.강원도 경기도 1900년대 학번
SELECT STUDENT_NAME "학생이름",
        STUDENT_NO "학번",
        STUDENT_ADDRESS "주소"
FROM TB_STUDENT
WHERE STUDENT_NO LIKE '9%' AND (STUDENT_ADDRESS LIKE '%경기%' OR STUDENT_ADDRESS LIKE '%강원%')
ORDER BY 1 ASC;

--4. 법학과 교수 연장자 순
SELECT PROFESSOR_NAME,
        PROFESSOR_SSN
FROM TB_PROFESSOR
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '법학과'
ORDER BY 2 ASC;

--5. 2004년 2학기 C3118100 과목 수강 학생들의 학점 조회, 학점 높은순 동일시 학번 낮은 순
--다중정렬
SELECT STUDENT_NO,
        POINT
FROM TB_GRADE
WHERE TERM_NO = '200402'AND CLASS_NO = 'C3118100'
ORDER BY 2 DESC, 1 ASC;

--6.학생번호, 학생 이름, 학과 이름을 학생이름으로 오름차순 정렬
SELECT STUDENT_NO,
        STUDENT_NAME,
        DEPARTMENT_NAME
FROM TB_STUDENT JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY 2 ASC;

--7. 과목이름 학과이름
SELECT CLASS_NAME,
        DEPARTMENT_NAME
FROM TB_DEPARTMENT JOIN TB_CLASS USING(DEPARTMENT_NO);

--8.과목별 교수이름
SELECT CLASS_NAME,
        PROFESSOR_NAME
FROM TB_CLASS JOIN TB_PROFESSOR ON TB_CLASS.DEPARTMENT_NO = TB_PROFESSOR.DEPARTMENT_NO
ORDER BY 1 ASC;

---9. 인문사회계열 교수
SELECT CLASS_NAME,
        PROFESSOR_NAME
FROM TB_PROFESSOR JOIN TB_CLASS USING(DEPARTMENT_NO) JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE CATEGORY LIKE '%인문사회%'
ORDER BY 1 ASC;

--10. 음악학과 학생들의 평점 학번 학생이름 전체평점
SELECT STUDENT_NO "학번",
       STUDENT_NAME "학생 이름",
        ROUND(AVG(POINT),1) "전체 평점"
FROM  TB_STUDENT JOIN TB_GRADE USING (STUDENT_NO) JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO,STUDENT_NAME
ORDER BY 3 DESC;

--11.A310307
SELECT DEPARTMENT_NAME "학과 이름",
        STUDENT_NAME "학생 이름",
        PROFESSOR_NAME "지도교수 이름"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_PROFESSOR USING(DEPARTMENT_NO)
WHERE STUDENT_NO = 'A313047';

--12. 2007 인간관계론 수강자  ,그룹바이로 중복을 제거하는 방법도 있다.
SELECT  DISTINCT   --아 학기가 다르다.
        STUDENT_NAME,
        STUDENT_NO,
        SUBSTR(TERM_NO,1,4),
        CLASS_NAME
FROM TB_STUDENT JOIN TB_GRADE USING(STUDENT_NO)
                JOIN TB_CLASS USING(DEPARTMENT_NO)
WHERE SUBSTR(TERM_NO,1,4) = '2007' AND CLASS_NAME = '인간관계론'
ORDER BY 1 ASC;

--13.예체능 담당교수 배정못받은 과목 ★
SELECT CLASS_NAME,
        DEPARTMENT_NAME
FROM TB_CLASS  JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
               JOIN TB_PROFESSOR USING(DEPARTMENT_NO)
WHERE CATEGORY LIKE '%예체능%'AND DEPARTMENT_NO IS NULL;

SELECT * --CLASS_NAME,DEPARTMENT_NAME
FROM TB_DEPARTMENT D LEFT OUTER JOIN TB_PROFESSOR P ON D.DEPARTMENT_NO = P.DEPARTMENT_NO
                     LEFT OUTER JOIN TB_CLASS C ON D.DEPARTMENT_NO = C.DEPARTMENT_NO
WHERE CATEGORY = '예체능'AND PROFESSOR_NAME IS NULL
ORDER BY D.DEPARTMENT_NO ASC;



SELECT DEPARTMENT_NO
FROM TB_DEPARTMENT

MINUS

SELECT DEPARTMENT_NO
FROM TB_PROFESSOR;

--14. 서반아어학과 학생들의 지도교수  없으면 미지정
SELECT STUDENT_NAME "학생 이름",
       NVL(PROFESSOR_NAME, '지도교수없음')
FROM TB_DEPARTMENT D LEFT OUTER JOIN TB_STUDENT S ON D.DEPARTMENT_NO = S.DEPARTMENT_NO
                     LEFT OUTER JOIN TB_PROFESSOR P ON S.COACH_PROFESSOR_NO = P.PROFESSOR_NO
WHERE DEPARTMENT_NAME ='서반아어학과'
ORDER BY STUDENT_NO ASC;

--15. 비 휴학생 중 4.0 이상 학번 이름 학과 평점
SELECT  S.STUDENT_NO "학번",
        STUDENT_NAME "이름",
        DEPARTMENT_NAME "학과 이름",
        ROUND(AVG(POINT),1) "평점"
FROM TB_STUDENT S, TB_DEPARTMENT D, TB_GRADE G
WHERE S.DEPARTMENT_NO = D.DEPARTMENT_NO
    AND S.STUDENT_NO = G.STUDENT_NO
    AND ABSENCE_YN = 'N'
GROUP BY S.STUDENT_NO,STUDENT_NAME,DEPARTMENT_NAME
HAVING ROUND(AVG(POINT),1) >= 4
ORDER BY 4 DESC;

--16. 환경조경학과 전공 과목별 평점
SELECT  C.CLASS_NO,
        CLASS_NAME,
        ROUND(AVG(POINT),7)
FROM TB_DEPARTMENT D
    JOIN TB_CLASS C ON D.DEPARTMENT_NO = C.DEPARTMENT_NO
    JOIN TB_GRADE G ON C.CLASS_NO = G.CLASS_NO
WHERE DEPARTMENT_NAME = '환경조경학과' AND C.CLASS_TYPE LIKE '%전공%'
GROUP BY C.CLASS_NO,CLASS_NAME
ORDER BY C.CLASS_NO ASC;

--17. 최경희 학생과 같은 과 학생들의 이름과 주소  // 서브쿼리를 알아야 풀 수 있네.
SELECT STUDENT_NAME,
        STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                       FROM TB_STUDENT
                       WHERE STUDENT_NAME = '최경희');

--18.국어국문학과 총평점이 높은 학생의 이름과 학번
SELECT STUDENT_NAME,
        STUDENT_NO
FROM TB_STUDENT S
JOIN  (SELECT MAX(AVG(POINT)) "MAX"
 FROM TB_GRADE 
 JOIN TB_STUDENT USING(STUDENT_NO)
 JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
 WHERE DEPARTMENT_NAME = '국어국문학과'
 GROUP BY STUDENT_NO) Q ON ;
 

 --서브쿼리는 셀렉트, 프롬 , 웨어 어디에든 쓸 수 있다.
 
 SELECT STUDENT_NO,AVG(POINT)
 FROM TB_GRADE 
 JOIN TB_STUDENT USING(STUDENT_NO)
 JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
 WHERE DEPARTMENT_NAME = '국어국문학과'
 GROUP BY STUDENT_NO;


--18번 스킵
--19. 환경조경학과 같은계열 학과 별 전공과목 평점
SELECT DEPARTMENT_NAME "계열 학과명",
       ROUND(AVG(POINT),1) "전공평점"
FROM TB_STUDENT S
JOIN TB_DEPARTMENT D ON  S.DEPARTMENT_NO = D.DEPARTMENT_NO
JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
WHERE CATEGORY = (SELECT CATEGORY FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '환경조경학과')
GROUP BY DEPARTMENT_NAME;
--CATEGORY = 환경조경학의 CATEGORY WHERE절에 서브쿼리로  환경조경학의 CATEGORY가져오기
                             
SELECT CATEGORY FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '환경조경학과';
