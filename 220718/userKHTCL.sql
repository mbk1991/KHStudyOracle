--TCL( Transaction Control Language)
--COMMIT, ROLLBACK;

SELECT * FROM EMPLOYEE;
CREATE TABLE EMP_COPY
AS SELECT EMP_ID,EMP_NAME,MANAGER_ID FROM EMPLOYEE;
SELECT* FROM EMP_COPY;

INSERT INTO EMP_COPY VALUES('100','김백중','200');

--변경사항 최종 저장 COMMIT
--커밋 전 변경 사항 취소 ROLLBACK

COMMIT;
ROLLBACK;
INSERT INTO EMP_COPY VALUES('120','하헌진','220');
SAVEPOINT savepoint1;
INSERT INTO EMP_COPY VALUES('130','이승현','230');
ROLLBACK TO savepoint1;
--세이브포인트까지만 롤백할 수 있도록 임시 저장 시점을 만듦. 그냥 롤백을 때리면 세이브포인트도 사라짐.
SELECT * FROM EMP_COPY;


--ROLLBACK  최종커밋된 시점으로 되돌리는 명령어.

-- 제약조건
--테이블 작성 시 각 컬럼에 대한 기록에 대해 제약조건을 설정할 수 있음
--데이터 무결성을 지키기 위해 제한된 조건
--*데이터 무결성: 데이터의 정확성과 일관성을 유지하기 위한 것
/*
    1. NOT NULL(C) ->필수항목이 NULL이 될 수 없도록 함. IS NOT NULL
    2. UNIQUE(U) -> 주민번호, 핸드폰, 아이디, 이메일 등 중복을 허용하지 않음. 컬럼 설정을 꼭해야 함.
    3. PRIMARY KEY(기본키)(P) -> 고유 식별자, 중복 X NULL X
    4. FOREIGN KEY(외래키)(R) -> 두 테이블의 데이터 간 연결 설정.
    5. CHECK(C) -> 성별, 기혼여부, 삭제여부, 퇴직여부 등  Y/N , 남/여/ 등의 형식 지정
    6. DEFAULT -> 삭제여부,퇴직여부, 날짜 등
*/

SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME ='EMPLOYEE';

SELECT * FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'EMPLOYEE';

CREATE TABLE USER_NOTNULL(
    USER_NO NUMBER NOT NULL,
    USER_ID VARCHAR2(20) NOT NULL,
    USER_PWD VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)
);

INSERT INTO USER_NOTNULL VALUES(1,'khuser01','1234','홍길동','남','019-1234-1234','hkd@naver.com');
SELECT * FROM USER_NOTNULL;

--UNIQUE제약조건
CREATE TABLE USER_UNIQUE(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20) UNIQUE,
    USER_PWD VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)
    );
    

CREATE TABLE USER_UNIQUE(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20), --UNIQUE,  --제약조건의 컬럼레벨 설정 
    USER_PWD VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50),
    UNIQUE(USER_ID) --제약조건을 테이블레벨로 설정했다. NOT NULL은 테이블레벨이 없다.
    );
    
INSERT INTO USER_UNIQUE 
VALUES(220,'khuser02','pass02','이용자','여','010123456123','khuser02@iei.or.kr');

SELECT * FROM USER_UNIQUE;

INSERT INTO USER_UNIQUE 
VALUES(220,'khuser02','pass02','이용자','여','010123456123','khuser02@iei.or.kr');

DROP TABLE USER_UNIQUE;

SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME ='USER_UNIQUE';


--CHECK제약조건
CREATE TABLE USER_CHECK(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) UNIQUE,
    USER_PWD VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10) CHECK (GENDER IN ('남', '여')),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50),
    GRADE_CODE NUMBER
);

INSERT INTO USER_CHECK
VALUES(1,'user01','pass01','일용지','남자','01012312312345','user@naver.com',4);

--DEFAULT 초기값 설정.

CREATE TABLE MEMBER_TBL(
    MEMBER_ID VARCHAR2(20) NOT NULL,
    MEMBER_PWD VARCHAR2(30) NOT NULL,
    ENROLL_DATE DATE DEFAULT SYSDATE
    );

INSERT INTO MEMBER_TBL
VALUES('khuser01','pass01','2022/07/18');
INSERT INTO MEMBER_TBL
VALUES('khuser02','pass01',DEFAULT);
INSERT INTO MEMBER_TBL
VALUES('khuser03','pass01',SYSDATE);
INSERT INTO MEMBER_TBL
VALUES('khuser04','pass01','123');

SELECT * FROM  MEMBER_TBL;
