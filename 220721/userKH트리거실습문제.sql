--@실습문제
--1. EMPLOYEE테이블의 퇴사자관리를 별도의 테이블 TBL_EMP_QUIT에서 하려고 한다.
--다음과 같이 TBL_EMP_JOIN, TBL_EMP_QUIT테이블을 생성하고, TBL_EMP_JOIN에서 DELETE시 자동으로 퇴사자 데이터가 TBL_EMP_QUIT에 INSERT되도록 트리거를 생성하라.

CREATE TABLE TBL_EMP_JOIN AS
SELECT * FROM EMPLOYEE;

DESC TBL_EMP_JOIN;
ALTER TABLE TBL_EMP_JOIN MODIFY
(EMP_ID VARCHAR2(3) PRIMARY KEY);

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'TBL_EMP_JOIN';

CREATE TABLE TBL_EMP_QUIT AS 
SELECT * FROM EMPLOYEE WHERE 1=0;

SELECT * FROM TBL_EMP_QUIT;

CREATE OR REPLACE TRIGGER TRG_INSERT_QUIT
    AFTER
    DELETE ON TBL_EMP_JOIN
    FOR EACH ROW
BEGIN
    INSERT INTO TBL_EMP_QUIT
    SELECT * FROM TBL_EMP_JOIN
    WHERE EMP_ID = :OLD.EMP_ID;
END;
/

DELETE FROM TBL_EMP_JOIN WHERE EMP_ID = '201';


--쉽게 테스트를해보자
CREATE TABLE TABLE1 (NUM NUMBER);
CREATE TABLE TABLE2 (NUM NUMBER);

CREATE OR REPLACE TRIGGER TRG_INSERT_NUM
    AFTER
    INSERT ON TABLE1
    FOR EACH ROW
BEGIN
    --INSERT INTO TABLE2 VALUES(1);
    --INSERT INTO TABLE2 VALUES(:NEW.NUM);
      INSERT INTO TABLE2 
      SELECT * FROM TABLE1 A
      WHERE A.NUM = :NEW.NUM;
END;
/

INSERT INTO TABLE1 VALUES(1);
INSERT INTO TABLE1 VALUES(2);
INSERT INTO TABLE1 VALUES(3);
SELECT * FROM TABLE2;

INSERT INTO TABLE2
SELECT * FROM TABLE1
WHERE NUM = 2;












--TBL_EMP_JOIN 테이블 생성 : QUIT_DATE, QUIT_YN 제외
--2. 사원변경내역을 기록하는 emp_log테이블을 생성하고, 사원테이블의 insert, update가 있을 때마다 신규데이터를 기록하는 트리거를 생성하라.
--로그테이블명 emp_log : 컬럼 log_no(시퀀스객체로부터 채번함. pk), log_date(기본값 sysdate, not null), emp테이블의 모든 컬럼
--트리거명 trg_emp_log